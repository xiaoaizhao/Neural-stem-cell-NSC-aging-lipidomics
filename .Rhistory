Cmb.avg.med <- Cmb.avg %>%
group_by(Age_KO) %>%
summarise(., MedianZscore = median(Cmb.avg.lpd.db.mean.zs))
Cmb.avg.med
## Calculate lipidomic aging score and compare across samples in Primary Culture #2 (i.e. KO experiment)
## Aging lipidomic score is calculated as the mean z score across aging features
## Will do this in
# 1) DB composition features alone
# 2) Individual lipid features alone
## --------------------------------------------------------------------
rm(list=ls())
library(tidyverse)
library(ggpubr)
library(ggthemes)
library(RColorBrewer)
library(rstatix)
setwd(rstudioapi::getActiveProject())
## -------------------------------------------------------------------------------------------------------------------
load('Output_Data/Exp2_DB_PCT_all_samples.Rdata') # effect size matrix on double bond composition in Primary Culture #2 Exp with KO
load("./Output_Data/Exp2_Norm_Impt_backtoraw_all693_lipids.Rdata") # effect size matrix on individual lipid in Primary Culture #2 Exp with KO
load("./Output_Data/KO_LUT.Rdata") # Color LUT for each KO condition
load("./Output_Data/Meta_DB_signature_hi_in_Old_4_studies.Rdata") # Aging double bond composition features from meta-analysis
load("./Output_Data/Meta_Lipid_signature_hi_in_Old_4_studies.Rdata") # Aging individual lipid features from meta-analysis
## Double bond composition features
## -------------------------------------------------------------------------------------------------------------------
## -------------------------------------------------------------------------------------------------------------------
## -------------------------------------------------------------------------------------------------------------------
DB.zs <- Exp2_DB %>%
mutate(., Cla_DB = paste0(Class, DB_num)) %>%
group_by(Cla_DB) %>%
group_modify(~{
.x %>%
mutate(., zscore = scale(DB_Pct))
})
DB <- DB.zs %>%
filter(., Cla_DB %in% DB.hi.old) %>%
group_by(Sample) %>%
summarise(., mean_zs = mean(zscore)) %>%
mutate(., Culture = substr(Sample, 1, str_locate(Sample, "_")-1)) %>%
mutate(., KO = substr(Sample, str_locate(Sample, "_")+1, nchar(Sample))) %>%
mutate(., Age = ifelse(grepl("Y", Culture), "Young", "Old")) %>%
rename(., "DB_mean_zs" = "mean_zs")  %>%
mutate(., KO.name = case_when(
KO == "N" ~ "Control",
KO == "E" ~ "Elovl5",
KO == "M" ~ "Mboat2",
KO == "A" ~ "Agpat3",
KO == "F" ~ "Fads2",
KO == "P" ~ "Pla2g4e",
)) %>%
mutate(., Age_KO = paste0(Age, "_", KO))
DB$KO.name <- factor(DB$KO.name, levels = KO.LUT$KO)
## Normality test to determine if it's appropriate to use parametric statistical testing
## -------------------------------------------------------------------------------------------------------------------
## Test between control and each KO condition
norm.test <- list()
for (x in levels(DB$KO.name)[2:6]){
d <- with(DB,
DB_mean_zs[KO.name == "Control"] - DB_mean_zs[KO.name == x])
norm.test[[x]] <- shapiro.test(d)$p.value
}
norm.df <- bind_rows(norm.test)
print(norm.df)
## result: all p-values are above 0.05, does not reject the hypothesis of normality. Will perform t-test for
## Subset to only include old samples and young control samples
## -------------------------------------------------------------------------------------------------------------------
DB <- DB %>%
filter(., Age == "Old" |
Age == "Young" & KO == "N")
DB$Age_KO <- factor(DB$Age_KO, levels = c("Young_N", "Old_N", "Old_E", "Old_M","Old_F", "Old_A", "Old_P"))
old.cmb <- DB %>%
group_by(Sample) %>%
filter(., Age == "Old")
YO_N <- DB %>%
group_by(Sample) %>%
filter(., KO == "N")
## One-way ANOVA shows significant difference between KO conditions
## -------------------------------------------------------------------------------------------------------------------
paired.aov <-aov(DB_mean_zs ~ Age_KO +  Error(Culture), data = old.cmb)
summary(paired.aov)
## Pair-wise t-test for old samples between KO condition
## Un-paired t-test between young and old control samples
## -------------------------------------------------------------------------------------------------------------------
stat.test <- old.cmb %>%
group_by(Age) %>%
t_test(DB_mean_zs ~ Age_KO, paired = TRUE, ref.group = "Old_N") %>%
adjust_pvalue(method = "fdr") %>%
add_significance()
stat.test <- stat.test %>% add_xy_position(x = "Age_KO")
stat.YO<- YO_N %>%
group_by(KO) %>%
t_test(DB_mean_zs ~ Age_KO, paired = FALSE, ref.group = "Young_N") %>%
adjust_pvalue(method = "fdr") %>%
add_significance()
stat.YO <- stat.YO %>% add_xy_position(x = "Age_KO")
stat.all <- bind_rows(stat.test, stat.YO)
a<- ggplot(DB, aes(x= Age_KO, y= DB_mean_zs, color = KO.name, shape = Age))
a+ geom_boxplot(outlier.shape = NA)+
geom_jitter(width = 0.18, alpha=0.8, size=3)+
scale_color_manual(values = KO.LUT$Color)+
scale_shape_manual(values =c(`Young` = 16, `Old` = 17)) +
theme_classic()+
theme(text=element_text(size = 13, face = "plain"),
axis.text = element_text(colour = "black"))+
labs(title = "DB composition aging signature - Higher in Old" , x = "", y = "Mean Z Score", color = "")+
stat_pvalue_manual(stat.all, label = "p.adj",
bracket.nudge.y = 0.1,
step.increase = 0.03, size = 3.5)
ggsave(filename = "./Figure_Panels/Fig_S6d.pdf", width = 5, height = 5, useDingbats=FALSE)
DB.med <- DB %>%
group_by(Age_KO) %>%
summarise(., MedianZscore = median(DB_mean_zs))
DB.med
## -------------------------------------------------------------------------------------------------------------------
## Individual lipid features
## -------------------------------------------------------------------------------------------------------------------
## -------------------------------------------------------------------------------------------------------------------
## -------------------------------------------------------------------------------------------------------------------
lpd.zs <- raw_int.exp2 %>%
rownames_to_column(., var = "LipidIon") %>%
mutate(., LipidIon = str_replace_all(LipidIon, "/", "_")) %>%
pivot_longer(-LipidIon, names_to = "Sample", values_to = "Conc_Int") %>%
group_by(LipidIon) %>%
group_modify(~{
.x %>%
mutate(., zscore = scale(Conc_Int))
})
highold.mean.lpd.zs <- lpd.zs %>%
filter(., LipidIon %in% lpd.hi.old)
Lpd <- highold.mean.lpd.zs %>%
group_by(Sample) %>%
summarise(., mean_zs = mean(zscore)) %>%
mutate(., Culture = substr(Sample, 1, str_locate(Sample, "_")-1)) %>%
mutate(., KO = substr(Sample, str_locate(Sample, "_")+1, nchar(Sample))) %>%
mutate(., Age = ifelse(grepl("Y", Culture), "Young", "Old")) %>%
rename(., "Lpd_mean_zs" = "mean_zs") %>%
mutate(., KO.name = case_when(
KO == "N" ~ "Control",
KO == "E" ~ "Elovl5",
KO == "M" ~ "Mboat2",
KO == "A" ~ "Agpat3",
KO == "F" ~ "Fads2",
KO == "P" ~ "Pla2g4e",
)) %>%
mutate(., Age_KO = paste0(Age, "_", KO))
Lpd$KO.name <- factor(Lpd$KO.name, levels = KO.LUT$KO)
## Normality test to determine if it's appropriate to use parametric statistical testing
## -------------------------------------------------------------------------------------------------------------------
## Test between control and each KO condition
norm.test <- list()
for (x in levels(Lpd$KO.name)[2:6]){
d <- with(Lpd,
Lpd_mean_zs[KO.name == "Control"] - Lpd_mean_zs[KO.name == x])
norm.test[[x]] <- shapiro.test(d)$p.value
}
norm.df <- bind_rows(norm.test)
print(norm.df)
## result: all p-values are above 0.05, does not reject the hypothesis of normality. Will perform t-test for
## Subset to only include old samples and young control samples
## -------------------------------------------------------------------------------------------------------------------
Lpd <- Lpd %>%
filter(., Age == "Old" |
Age == "Young" & KO == "N")
Lpd$Age_KO <- factor(Lpd$Age_KO, levels = c("Young_N", "Old_N", "Old_E", "Old_M","Old_F", "Old_A", "Old_P"))
old.cmb <- Lpd %>%
group_by(Sample) %>%
filter(., Age == "Old")
YO_N <- Lpd %>%
group_by(Sample) %>%
filter(., KO == "N")
## One-way ANOVA shows significant difference between KO conditions
## -------------------------------------------------------------------------------------------------------------------
paired.aov <-aov(Lpd_mean_zs ~ Age_KO +  Error(Culture), data = old.cmb)
summary(paired.aov)
## Pair-wise t-test for old samples between KO condition
## Un-paired t-test between young and old control samples
## -------------------------------------------------------------------------------------------------------------------
stat.test <- old.cmb %>%
group_by(Age) %>%
t_test(Lpd_mean_zs ~ Age_KO, paired = TRUE, ref.group = "Old_N") %>%
adjust_pvalue(method = "fdr") %>%
add_significance()
stat.test <- stat.test %>% add_xy_position(x = "Age_KO")
stat.YO<- YO_N %>%
group_by(KO) %>%
t_test(Lpd_mean_zs ~ Age_KO, paired = FALSE, ref.group = "Young_N") %>%
adjust_pvalue(method = "fdr") %>%
add_significance()
stat.YO <- stat.YO %>% add_xy_position(x = "Age_KO")
stat.all <- bind_rows(stat.test, stat.YO)
a<- ggplot(Lpd, aes(x= Age_KO, y= Lpd_mean_zs, color = KO.name, shape = Age))
a+ geom_boxplot(outlier.shape = NA)+
geom_jitter(width = 0.18, alpha=0.8, size=3)+
scale_color_manual(values = KO.LUT$Color)+
scale_shape_manual(values =c(`Young` = 16, `Old` = 17)) +
theme_classic()+
theme(text=element_text(size = 13, face = "plain"),
axis.text = element_text(colour = "black"))+
labs(title = "Lipid aging signature - Higher in Old" , x = "", y = "Mean Z Score", color = "")+
stat_pvalue_manual(stat.all, label = "p.adj",
bracket.nudge.y = 0.1,
step.increase = 0.03, size = 3.5)
ggsave(filename = "./Figure_Panels/Fig_S6e.pdf", width = 5, height = 5, useDingbats=FALSE)
Lpd.med <- Lpd %>%
group_by(Age_KO) %>%
summarise(., MedianZscore = median(Lpd_mean_zs))
Lpd.med
renv::snapshot()
renv::restore()
rm(list=ls())
library(tidyverse)
library(data.table)
library(RColorBrewer)
library(ggthemes)
library(pROC)
#load both sample level results as well as Effect Size table
ssDT <- fread('../../Output_Data/20210512_DESI_decomposition_single_sample.csv')
dt2matrix <- function(inputDT){
inM <- as.matrix(inputDT[,-1])
row.names(inM) <- inputDT$sampleID
return(inM)
}
allcCastMat <- dt2matrix(
dcast.data.table(ssDT[cell!='other'],
sampleID~cell+peak,
value.var = 'mean'))
cellCastMat <- dt2matrix(
dcast.data.table(ssDT[cell!='other'],
paste0(sampleID,"_",cell)~peak,
value.var = 'mean'))
gfapCastMat <- dt2matrix(
dcast.data.table(ssDT[cell=='gfap'],
sampleID~cell+peak,
value.var = 'mean'))
gfapCastPCA <- prcomp(gfapCastMat)
gfapCastPCADT <- as.data.table(gfapCastPCA$x,keep.rownames = T)
gfapCastPCADT[,class:=0]
gfapCastPCADT[grep("^O",rn),class:=1]
gfapCastPCADT <- melt.data.table(gfapCastPCADT,id.vars = c("rn",'class'))
ttestDT <- function(valueV,classV,ttest=T){
if(ttest==T){
t.test(valueV[classV==0],valueV[classV==1])
}
else{
wilcox.test(valueV[classV==0],valueV[classV==1])
}
}
unique(gfapCastPCADT[,ttestDT(value,class),variable][,conf.int:=NULL])[order(p.value)]
data.table(
PC=gfapCastPCADT[,.N,variable]$variable,
pv=sapply(
lapply(gfapCastPCADT[,.N,variable]$variable,
function(i){
wilcox.test(gfapCastPCADT[variable==i][class==1]$value,
gfapCastPCADT[variable==i][class==0]$value)
}),function(j) j$p.value),
auc=sapply(gfapCastPCADT[,.N,variable]$variable,
function(i){
roc(gfapCastPCADT[variable==i]$class,
gfapCastPCADT[variable==i]$value)$auc
})
)[,fdr:=p.adjust(pv)][order(pv)]
plotgfapCastPCAinput <- as.data.table(
gfapCastPCA$x,
keep.rownames = T)
plotgfapCastPCAinput[,age:="Young"]
plotgfapCastPCAinput[grep("^O",rn),age:="Old"]
plotgfapCastPCAinput[,class:=0]
plotgfapCastPCAinput[age=='Old',class:=1]
plotgfapCastPCAinput$age <- factor(plotgfapCastPCAinput$age, levels = c("Young", "Old"))
xplot = "PC3"
yplot = "PC9"
decB <- glm(class ~ plotgfapCastPCAinput[,get(xplot)] + plotgfapCastPCAinput[,get(yplot)],
data   = plotgfapCastPCAinput,
family = binomial)
summary(decB)
slope <- coef(decB)[2]/(-coef(decB)[3])
intercept <- coef(decB)[1]/(-coef(decB)[3])
plotgfapCastPCAinput <- as.data.frame(plotgfapCastPCAinput)
ggplot(plotgfapCastPCAinput,
aes(x=plotgfapCastPCAinput[,xplot],
y=plotgfapCastPCAinput[,yplot],
color=age)) +
geom_point(size=4, alpha=0.8) +
geom_abline(slope = slope,intercept = intercept,
linetype=2) +
scale_color_manual(values = c("darkgoldenrod", "maroon"))+
xlab(paste0(xplot, ": ", format(summary(gfapCastPCA)$importance[2,xplot] * 100,
digits = 3), " % variance"))+
ylab(paste0(yplot, ": ", format(summary(gfapCastPCA)$importance[2,yplot] * 100,
digits = 3), " % variance"))+
theme_classic()+
theme(text=element_text(size = 13, face = "plain"),
axis.text = element_text(colour = "black"))
rm(list=ls())
library(tidyverse)
library(data.table)
library(RColorBrewer)
library(ggthemes)
library(pROC)
#load both sample level results as well as Effect Size table
ssDT <- fread('../../Output_Data/20210512_DESI_decomposition_single_sample.csv')
dt2matrix <- function(inputDT){
inM <- as.matrix(inputDT[,-1])
row.names(inM) <- inputDT$sampleID
return(inM)
}
allcCastMat <- dt2matrix(
dcast.data.table(ssDT[cell!='other'],
sampleID~cell+peak,
value.var = 'mean'))
cellCastMat <- dt2matrix(
dcast.data.table(ssDT[cell!='other'],
paste0(sampleID,"_",cell)~peak,
value.var = 'mean'))
gfapCastMat <- dt2matrix(
dcast.data.table(ssDT[cell=='gfap'],
sampleID~cell+peak,
value.var = 'mean'))
gfapCastPCA <- prcomp(gfapCastMat)
gfapCastPCADT <- as.data.table(gfapCastPCA$x,keep.rownames = T)
gfapCastPCADT[,class:=0]
gfapCastPCADT[grep("^O",rn),class:=1]
gfapCastPCADT <- melt.data.table(gfapCastPCADT,id.vars = c("rn",'class'))
ttestDT <- function(valueV,classV,ttest=T){
if(ttest==T){
t.test(valueV[classV==0],valueV[classV==1])
}
else{
wilcox.test(valueV[classV==0],valueV[classV==1])
}
}
unique(gfapCastPCADT[,ttestDT(value,class),variable][,conf.int:=NULL])[order(p.value)]
data.table(
PC=gfapCastPCADT[,.N,variable]$variable,
pv=sapply(
lapply(gfapCastPCADT[,.N,variable]$variable,
function(i){
wilcox.test(gfapCastPCADT[variable==i][class==1]$value,
gfapCastPCADT[variable==i][class==0]$value)
}),function(j) j$p.value),
auc=sapply(gfapCastPCADT[,.N,variable]$variable,
function(i){
roc(gfapCastPCADT[variable==i]$class,
gfapCastPCADT[variable==i]$value)$auc
})
)[,fdr:=p.adjust(pv)][order(pv)]
plotgfapCastPCAinput <- as.data.table(
gfapCastPCA$x,
keep.rownames = T)
plotgfapCastPCAinput[,age:="Young"]
plotgfapCastPCAinput[grep("^O",rn),age:="Old"]
plotgfapCastPCAinput[,class:=0]
plotgfapCastPCAinput[age=='Old',class:=1]
plotgfapCastPCAinput$age <- factor(plotgfapCastPCAinput$age, levels = c("Young", "Old"))
xplot = "PC3"
yplot = "PC9"
decB <- glm(class ~ plotgfapCastPCAinput[,get(xplot)] + plotgfapCastPCAinput[,get(yplot)],
data   = plotgfapCastPCAinput,
family = binomial)
summary(decB)
slope <- coef(decB)[2]/(-coef(decB)[3])
intercept <- coef(decB)[1]/(-coef(decB)[3])
plotgfapCastPCAinput <- as.data.frame(plotgfapCastPCAinput)
ggplot(plotgfapCastPCAinput,
aes(x=plotgfapCastPCAinput[,xplot],
y=plotgfapCastPCAinput[,yplot],
color=age)) +
geom_point(size=4, alpha=0.8) +
geom_abline(slope = slope,intercept = intercept,
linetype=2) +
scale_color_manual(values = c("darkgoldenrod", "maroon"))+
xlab(paste0(xplot, ": ", format(summary(gfapCastPCA)$importance[2,xplot] * 100,
digits = 3), " % variance"))+
ylab(paste0(yplot, ": ", format(summary(gfapCastPCA)$importance[2,yplot] * 100,
digits = 3), " % variance"))+
theme_classic()+
theme(text=element_text(size = 13, face = "plain"),
axis.text = element_text(colour = "black"))
ggsave(paste0("../../Figure_Panels/Fig_2d.pdf"), width = 5, height = 5, useDingbats=FALSE)
## Objective: assess age-related changes in lipids that are detected by LC-MS datasets vs. DESI-MSI
## 3 LC-MS datasets are used in total, Primary Culture #1, Primary Culture #2 and In vivo qNSC lipidomic dataset
## Steps:
# 1. Perform meta-analysis on all 3 LC-MS datasets
# 2. Overlap lipids that are detected and validated on DESI-MSI
# 3. Perform correlation analysis
rm(list=ls())
library(tidyverse)
library(ggpubr)
library(data.table)
library(ggthemes)
library(rmeta)
library(mgcv)
library(RColorBrewer)
library(ggrepel)
setwd(rstudioapi::getActiveProject())
source("./Scripts/Function_scripts/Effect_size_functions.R")
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
load("./Output_Data/Ef_Size_Lipid_Age_qNSC_InVitro_LC.Rdata")
load("./Output_Data/Ef_Size_Lipid_Exp2_all_KO.Rdata")
load("./Output_Data/Ef_Size_Lipid_InVivo.Rdata")
lipid_config_allExp_DT <- rbind(
as.data.table(Invivo.lpd.es.g)[,dataset:='In vivo sorted'],
as.data.table(InVitro.lpd.es.g)[,dataset:='Primary Culture'],
as.data.table(Exp2.lpd.es.g.allKO)[KO=="N"][,-13][,dataset:='Primary Culture #2']
)
## Meta-analysis on 3 datasets
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
lipid_config_allExp_DT <- lipid_config_allExp_DT[!is.na(es_g)]
metaRunnerDT <- function(esV,
seV){
metaR <- meta.summaries(
esV,
seV,
method = 'random')
outV <- c(metaR$summary,
metaR$se.summary,
metaR$het[3],
length(metaR$effects))
return(
data.table(
res=outV,
names=c('summary',
'se_summary',
'pv_het',
'n')))
}
summaryCastDT.noGPMV <- dcast.data.table(
lipid_config_allExp_DT[
,
metaRunnerDT(es_g,
se_g)
,
LipidIon],LipidIon~names,value.var='res')
summaryCastDT.noGPMV[,zscore:=summary/se_summary]
summaryCastDT.noGPMV[,pvalue:=2*pnorm(abs(zscore),lower.tail = F)]
save(summaryCastDT.noGPMV, file = "./Output_Data/Meta_lipids_3_studies_no_GPMV.Rdata")
## Add m/z value to lipids after meta-analysis. If a lipid is detected in multiple studies, will use the mean m/z and convert all ion to [M-H]- to overlap with DESI-MSI data
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
load("./Output_Data/Meta_lipids_3_studies_no_GPMV.Rdata")
ef_g_noGPMV <- summaryCastDT.noGPMV %>%
filter(., !is.na(summary))
##match primary culture #1
load("./Output_Data/2_Ion+FA_clean_373_lipids.Rdata") ##lipid data frame with m/z for each lipid species
Sum_ef_g.mz <-  add.mz(FA_unique373, m.z, LipidIon, ef_g_noGPMV) %>%
rename(., "m.z_Exp1" = "m.z")
##match primary culture #2
load("./Output_Data/Exp2_Dup_ID_rmv+dup_isomer_rmv_694_lipids.Rdata")
Sum_ef_g.mz <- Sum_ef_g.mz %>%
rename("LipidIon" = "LipidIonFix")
Sum_ef_g.mz2 <- add.mz(df.rmv.isomer, CalcMz, LipidIon, Sum_ef_g.mz) %>%
rename(., "m.z_Exp2" = "CalcMz")
##match in vivo sorted
load("./Output_Data/Invivo_Ion+FA_clean_130_lipids.Rdata")
Sum_ef_g.mz2 <- Sum_ef_g.mz2 %>%
rename("LipidIon" = "LipidIonFix")
Sum_ef_g.mz3 <- add.mz(FA_unique130, m.z, LipidIon, Sum_ef_g.mz2) %>%
rename(., "m.z_invivo" = "m.z")
Sum_ef_g.mz3 <- Sum_ef_g.mz3 %>%
group_by(LipidIonFix) %>%
group_modify(~{
.x %>%
mutate(., MZ_avg = mean(c(m.z_Exp1, m.z_Exp2, m.z_invivo), na.rm = T))
}) %>%
rename("LipidIon" = "LipidIonFix")
Sum_ef_g.NegH <- Conv.NegH(Sum_ef_g.mz3) %>%
ungroup() %>%
rename(., "Summary_Ef_size" = "summary") %>%
select(c("peak", "Summary_Ef_size", "LipidIon"))
## Input list of lipids that were validated by a separate tandem MS for structural identification, only use this set of lipids for correlation analysis
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DESI.ls <- read.csv("./Input_Data/DESI_validated_lipids_list_072922.csv", stringsAsFactors = F)
# reformat to string for subsetting
d <- str_c(DESI.ls$Ion, collapse = ",")
DESI.ls.c <-DESI.ls %>%
mutate(., Ion = Lbr(Ion)) %>%
mutate(., Ion = Rbr(Ion))
ID.list <- str_c(DESI.ls.c$Ion, collapse = ",")
ID.list <- str_replace_all(ID.list, ",", "|")
Sum.ef.DESI <- Sum_ef_g.NegH %>%
mutate(., NoIon = substr(LipidIon, 1, str_locate(LipidIon, "\\)"))) %>%
filter(., str_detect(NoIon, ID.list))
## Read in effect size matrix of DESI dataset
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DESI <- read.csv("./Output_Data/20210512_DESI_decomposition_ES_oldVsYoung.csv", stringsAsFactors = F)
DESI_GFAP <- DESI %>%
filter(., cell == "gfap") %>%
select(c("peak", "es"))
DESIv3Exps <- inner_join(DESI_GFAP, Sum.ef.DESI, by = "peak")
## Plot for correlation
## ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
a <- ggplot(DESIv3Exps, aes(Summary_Ef_size, es))
a+geom_smooth(method = 'lm', alpha = 0.3, colour = "blue4", fill='lightskyblue',linetype=1)+
geom_point(size = 3, colour = "grey25")+
stat_cor(method = "pearson", label.x = -2.5, label.y = 0.5)+
theme_classic()+
labs(title = "DESI vs. all LC" ,
x = "Summary effect size from 3 LC experiments",
y = "DESI effect size")+
geom_text_repel(aes(label = NoIon), fontface = 'plain',
size = 3,colour = "black",
xlim = c(min(DESIv3Exps$Summary_Ef_size)-0.2,
max(DESIv3Exps$Summary_Ef_size)+0.2),
box.padding = unit(0.55, "lines"),
seed = 1234,
min.segment.length = 0,
max.overlaps = 10)+
theme(text = element_text(size = 11, face = "plain"))+
theme(axis.text = element_text(size = 11, face = "plain", colour = "black"))+
theme(legend.position = "none")
ggsave(filename = "./Figure_Panels/Fig_2e.pdf", width = 5, height = 5,
useDingbats=FALSE)
